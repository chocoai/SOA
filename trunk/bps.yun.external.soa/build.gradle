apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'

ext {
	springVersion = '4.1.6.RELEASE'
	dubboVersion  = '2.5.3'
}

sourceCompatibility = 1.7
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	
	compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
	compile group: 'org.springframework', name: 'spring-context', version: springVersion
	
	compile(group: 'com.alibaba', name: 'dubbo', version: dubboVersion){
		exclude group: 'org.springframework'
	}
	
	compile project(':bps.yun.external.service.api')
	compile project(':bps.yun.external.service')
	compile project(':bps.yun.service.api')
	compile project(':bps.yun.service')
	
	compile fileTree(dir: '../BPS.YUN.AppServer/src/main/webapp/WEB-INF/lib', include: '*.jar')  
   	
   	testCompile 'junit:junit:4.12'
	testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
   	
   	runtime 'javax.servlet:jstl:1.2'
}
/*将src/main/java编译的class打包成${project.name}-${version}.jar*/  
task jarWithoutResources(type: Jar) {
    baseName project.name  
    from("$buildDir/classes/main")  
}
war{
    dependsOn jarWithoutResources
    from("$projectDir/src/main/resources") {  
        into("WEB-INF/classes")  
    }
    classpath=classpath - sourceSets.main.output  
    classpath fileTree(dir:libsDir, include:"${project.name}-${version}.jar")  
}
test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}